spring.application.name=Next-to-read

#spring.datasource.url=jdbc:mysql://${MYSQL_HOST:localhost}:3306/books
#spring.datasource.username=${DB_USERNAME}
#spring.datasource.password=${DB_PASSWORD}
#spring.jpa.hibernate.ddl-auto=update

spring.datasource.url=jdbc:mysql://${RDS_HOST}/books
spring.datasource.username=${RDS_USERNAME}
spring.datasource.password=${RDS_PASSWORD}
# start application and check the update of @Entity
spring.jpa.hibernate.ddl-auto=update


# JWT Configuration
jwt.secret=${JWT_SECRET:abcdefghijklmnopqrstuvwxyz12345678901234567890123456789012345678901234567890abcdef}

# Spring Boot global time setting to UTC
spring.jackson.time-zone=UTC

# Redis server details local
#spring.data.redis.host=${REDIS_HOST:localhost}
#spring.data.redis.port=${REDIS_PORT:6379}
#spring.data.redis.username=${REDIS_USER:default}
#spring.data.redis.password=${REDIS_PASSWORD}

# AWS ElastiCache cluster mode configuration
spring.data.redis.host=warren.gbvbyb.ng.0001.apne1.cache.amazonaws.com
spring.data.redis.port=6379
spring.data.redis.ssl.enabled=false

# Conditional SSL configuration
#spring.data.redis.ssl.enabled=${REDIS_USE_SSL:false}

# Redis connection pool configuration (using Lettuce, the default client)
spring.data.redis.lettuce.pool.max-active=8
spring.data.redis.lettuce.pool.max-idle=8
spring.data.redis.lettuce.pool.min-idle=0
# Time between eviction runs
spring.data.redis.lettuce.pool.time-between-eviction-runs=10000ms

# Connection and operation timeouts
spring.data.redis.timeout=5000ms



# AWS ElastiCache cluster
#spring.redis.cluster.nodes=your-elasticache-endpoint.cache.amazonaws.com:6379

# Logging configuration
logging.level.org.springframework.data.redis=DEBUG
logging.level.io.lettuce=DEBUG

# Cache TTL setting (optional, uncomment if needed)
#spring.cache.redis.time-to-live=3600000